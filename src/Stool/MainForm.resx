<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACMBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAABFNJ
        REFUeNrt3T9PJGUAx/EfC8KhBRcTwZXiKpurKUjuRZDQekbfhc01thqvsrCm09jAKzC5UEHhm7hbJW4O
        Eg0IYbC+i1kyzMzuM7ufDyUMzPPMd2fm9s9zCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM7DUYNtBHudR
        BiZxpqpc5TzVtANYy7PsZSfDfOAYzNRN3uQ0RznOv9MLYDvf5It8bPaLMc5Bvssf9TdcfsAf+yw/5qus
        m/WCfJjdPMmr/N19AGv5Nl+b8eIs5WkG+S239Tarfwv3LM/NdqEJfJnduhsNav/8nmt/sT7Jft0jWjeA
        x9kxzwXbyUa3ATzK0CwXbFj35rz+JcC/+0u22vUlgDkjAAEgAASAAFhAKy3/vtuc1X02mhqWs/mgF/Cm
        FsBZ9vLaeaUjVbZz2O5Tce2fAV7njSPVoZbPr+0/Vj36uzQo/hey4EUhAASAABAAAkAACAABIAAWIoCq
        h7PQH63PbtuvBi5nO84r3R3+7XbfDdB+AJs59IaQDi1ns/QzgE8O9YqTtQAQAAJAAAgAAUxW5cakFey6
        7nOFdQO4ysgsF2yUy24DOM+JWS7YSS66DaDKUcbmuVDjHHV9CUiOc5A7c12guxzkuO5G9V9bus3veZKn
        jdYZp4vD/2te1L0APGyt4H/yKkv5PB+Z9WKM81Ne5M/6Gz70cbya3exnJ8OsvhfU5M+v37d+QNPtZ236
        47/OKKc5zHGuH7LDzf7DiI2sv3MXcf/n10cT1w9ouv2szWL8VS5z8fB3Cq00Gu7bvP2fRjOx4PvWD2i6
        /az1bPxtP5YGDX9iMPU9XvDxey1gwQlAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACGCWyl6HsHer
        JK70bH/LXoewg3X8BPCu0tchbH0dPwG8P8HWIWyVm0ABIAAEgAAQAAJAAAgAASAABIAAmGN9ezWw7+sE
        CqChs56vEyiAxmeAfq8TWJz+3QP0fZ1AO4wAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgA
        ASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAAAZgCASAABIAAEAACQAAIAAEg
        AASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABHCfqsF350Fh41+Z8t9bzvaE7KpsZ3muD39x4592AJs5
        zO3ECdqc6wCKG//0zwDDuT7AvRu/m8AFJwABIAAEgAAQQGNVbjrd3+vCnyvs3fjbDuAqo04nYJTLogPo
        3fjbDuA8J51OwEkuig6gd+Nv/xJwlHFnwx/nqPhLwGKPP8laXqbKXQdfVV5mtfThL/z4k2zl5w6moMov
        +bQPw1/48SfZyvc5a3X4f+WHbPVl+H0a/1JHU7Ca3exnJ8PGJ63rjHKawxznujcB9Gj8Sx1OwiAbWW98
        m1nlMhe9fKfQoo8fAAAAAAAAAAAAAIDu/Qdor9FCY5oPZgAAAABJRU5ErkJggg==
</value>
  </data>
</root>